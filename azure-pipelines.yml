trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        # containerRegistry: 'Docker Registry Service Conn'
        containerRegistry: 'ACR Service Conn'
        # repository: 'souravkar/sampleapi'
        repository: 'souravkar.azurecr.io/sampleapi'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)

- stage: Provision
  displayName: 'Creating Infrasture using Terraform'
  dependsOn: Build
  jobs:
    - job: Provision
      displayName: 'Provision Container instance'
      pool: 
        vmimage: ubuntu-latest
      variables:
      - group: TF_Sample_Lib
      steps:
        - script: |
            set -e

            terraform init -input=false
            terraform apply -refresh-only -auto-approve
            terraform destroy -input=false -auto-approve
          name: 'RunTerraform'
          displayName: 'Run Terraform'
          env:
            ARM_CLIENT_ID: $(ARM_CLIENT_ID)
            ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
            ARM_TENANT_ID: $(ARM_TENANT_ID)
            ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
            TF_VAR_imagebuild: $(tag)